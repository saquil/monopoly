package com.insta.monopoly.jeu;

import java.util.ArrayList;

import com.insta.monopoly.cases.Case;
import com.insta.monopoly.cases.CaseCommerciale;
import com.insta.monopoly.cases.CaseRue;
import com.insta.monopoly.entites.Joueur;

public class Jeu {
	private int joueurCourant;
	private ArrayList<Joueur> joueurs;
	private PlateauDeJeu plateau;

	public ArrayList<Joueur> getJoueurs() {
		return joueurs;
	}

	public void setJoueurs(ArrayList<Joueur> joueurs) {
		this.joueurs = joueurs;
	}

	public PlateauDeJeu getPlateau() {
		return plateau;
	}

	public void setPlateau(PlateauDeJeu plateau) {
		this.plateau = plateau;
	}

	public int getNbJoueurs() {
		return joueurs.size();
	}

	public Joueur getJoueurFromId(int id) {
		for (int i = 0; i < joueurs.size(); i++) {
			if (id == joueurs.get(i).getId()) {
				return joueurs.get(i);
			}
		}
		return null;
	}

	public Joueur getJoueurCourant() {
		return joueurs.get(this.joueurCourant);
	}

	public void setJoueurCourant(int joueurCourant) {
		this.joueurCourant = joueurCourant;
	}

	public Jeu(int nbJoueurs) {
		this.joueurCourant = 0;

		// / INITIALISATION DES JOUEURS
		this.joueurs = new ArrayList<Joueur>();
		for (int i = 0; i < nbJoueurs; i++) {
			this.joueurs.add(new Joueur("Joueur " + i, i));
		}

		// CREATION DU PLATEAU DE JEU
		this.plateau = new PlateauDeJeu();
	}

	// ACCESSEURS SUPPLEMENTAIRES
	public Case getCase(int needle) {
		if (needle > -1 && needle < 40) {
			return this.plateau.getCase(needle);
		}
		return null;
	}

	public int getNbcases() {
		return this.plateau.getNbcases();
	}

	public Case getCaseJoueur(Joueur unJoueur) {
		return this.getCase(unJoueur.getPosition());
	}

	public void prochainJoueur(boolean joueurElimine, int idActuel) {
		if (joueurElimine) {
			this.joueurCourant = 0;
			for(int i = 0; i < joueurs.size(); i++) {
				if(joueurs.get(i).getId() > idActuel) {
					this.joueurCourant = i;
					break;
				}
			}
		} else {
			this.joueurCourant += 1;
			// Puis par la taille du tableau
			if (this.joueurCourant >= this.getNbJoueurs()) {
				this.joueurCourant = 0;
			}
		}
		this.joueurs.get(this.joueurCourant).setNbDoubles(0);
	}

	public void emprisonerJoueur(Joueur joueur) {
		joueur.setPosition(10);
		joueur.setEstEnPrison(true);
		joueur.setNbDoubles(0);
	}

	public void sortirDePrison(Joueur joueur) {
		joueur.decrAgent(5000);
		joueur.setEstEnPrison(false);
	}

	public void scenario(int scenario, int nbJoueurs) {
		// 1 - Normal
		// 2 - Environnement peuplé
		// 3 Catastrophe
		if (scenario == 2) {
			for (int i = 0; i < 40; i += 2) {
				int proprietaireAleatoire = (De.getRandom(0, nbJoueurs));
				if (this.getPlateau().getCase(i) instanceof CaseCommerciale) {
					((CaseCommerciale) this.getPlateau().getCase(i))
							.setProprietaire(proprietaireAleatoire);
				}
			}
		}

		if (scenario == 3) {
			for (int i = 1; i < this.getNbJoueurs(); i++) {
				this.getJoueurFromId(i).setArgent(100);
			}
			for (int i = 0; i < 40; i++) {
				if (this.getPlateau().getCase(i) instanceof CaseRue) {
					((CaseRue) this.getPlateau().getCase(i)).setProprietaire(0);
					((CaseRue) this.getPlateau().getCase(i)).setNbMaison(5);
				} else if (this.getPlateau().getCase(i) instanceof CaseCommerciale) {
					int proprietaireAleatoire = (nbJoueurs > 2) ? De.getRandom(
							1, nbJoueurs - 1) : -1;
					this.getJoueurFromId(proprietaireAleatoire).setArgent(100);
					((CaseCommerciale) this.getPlateau().getCase(i))
							.setProprietaire(proprietaireAleatoire);
				}

			}
		}

	}
}
